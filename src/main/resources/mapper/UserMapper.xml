<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hyundai.cc.usermanage.user.mapper.UserMapper">
    <select id="getUserList" resultType="hyundai.cc.usermanage.user.dto.UserDTO">-->
    select
            id,
           email,
           PASSWORD,
           username,
           nickname,
           createdate,
           content
    from USER_INFO
    order by id desc

    </select>
    <insert id="createUser" parameterType="hyundai.cc.usermanage.user.dto.UserCreateDTO">
        INSERT INTO USER_INFO (
            id,
            email,
            username,
            nickname,
            password,
            content,
            enable
        ) VALUES (
                     #{id},
                     #{email},
                     #{username},
                     #{nickname},
                     #{password},
                     #{content, jdbcType=VARCHAR},
                     #{enable}
                 )
    </insert>


    <select id="getUserDetail" parameterType="java.lang.String" resultType="hyundai.cc.usermanage.user.dto.UserDTO">
        SELECT  id,
                email,
                PASSWORD,
                username,
                nickname,
                content,
                createDate
        FROM USER_INFO
        WHERE ID = #{id}
    </select>


    <update id="updateUser">
        <![CDATA[
        UPDATE USER_INFO
        SET
            USERNAME = #{user.username},
            NICKNAME = #{user.nickname},
            CONTENT=#{user.content, jdbcType=VARCHAR},
            PASSWORD = #{user.password}
        WHERE ID = #{id}
        ]]>
    </update>

    <delete id="deleteUser" parameterType="java.lang.String">
        DELETE FROM USER_INFO WHERE ID = #{userId}
    </delete>

    <!-- READ -->
    <select id="getUsersByPage" parameterType="hyundai.cc.domain.Criteria" resultType="hyundai.cc.usermanage.user.dto.UserDTO">
        <![CDATA[
        select
            id, email, PASSWORD,username, nickname,createdate,content,enable
        from
            (
                select /*+ INDEX_DESC(USER_INFO pk_user_info) */
                    rownum rn, id, username, email,PASSWORD,nickname,createdate,content,enable
                from
                    USER_INFO
                where
                    rownum <= #{pageNum} * #{amount}
            )
        where rn > (#{pageNum}-1) * #{amount}
        ]]>
    </select>

    <select id="getTotalCount" parameterType="hyundai.cc.domain.Criteria" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM USER_INFO
    </select>

    <!-- 수강 중인 과목 조회 -->
    <select id="findProgressCourses" parameterType="java.lang.String" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
        l.LECTUREID AS lectureId,
        l.TITLE AS title,
        l.LECTURERID AS lecturerId,
        u.USERNAME AS lecturerName,
--         le.INTRODUCTION AS lecturerIntroduction,
        c.NAME AS centerName,
        l.LECTURETIME AS lectureTime,
        l.LOCATION AS location,
        l.STARTDATE AS startDate,
        l.ENDDATE AS endDate,
        l.LECTURECOUNT AS lectureCount,
        l.PRICE AS price,
        l.DESCRIPTION AS description,
        l.CATEGORYID AS categoryId
        FROM
        ENROLLMENT e
        INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
        INNER JOIN LECTURER le ON l.LECTURERID = le.ID
        INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
        INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
         e.USER_ID = #{userid}
        AND e.IS_FINISHED = 0
    </select>


    <!-- 수강 완료한 과목 조회 -->
    <select id="findFinishCourses" parameterType="java.lang.String" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
        l.LECTUREID AS lectureId,
        l.TITLE AS title,
        l.LECTURERID AS lecturerId,
        u.USERNAME AS lecturerName,
--         le.INTRODUCTION AS lecturerIntroduction,
        c.NAME AS centerName,
        l.LECTURETIME AS lectureTime,
        l.LOCATION AS location,
        l.STARTDATE AS startDate,
        l.ENDDATE AS endDate,
        l.LECTURECOUNT AS lectureCount,
        l.PRICE AS price,
        l.DESCRIPTION AS description,
        l.CATEGORYID AS categoryId
        FROM
        ENROLLMENT e
        INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
        INNER JOIN LECTURER le ON l.LECTURERID = le.ID
        INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
        INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            e.USER_ID = #{userid}
            AND e.IS_FINISHED = 1
    </select>

    <!-- 좋아요 과목 조회 -->
    <select id="findLikedCourses" parameterType="java.lang.String" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
            l.LECTUREID AS lectureId,
            l.TITLE AS title,
            l.LECTURERID AS lecturerId,
            u.USERNAME AS lecturerName,
--             le.INTRODUCTION AS lecturerIntroduction,
            c.NAME AS centerName,
            l.LECTURETIME AS lectureTime,
            l.LOCATION AS location,
            l.STARTDATE AS startDate,
            l.ENDDATE AS endDate,
            l.LECTURECOUNT AS lectureCount,
            l.PRICE AS price,
            l.DESCRIPTION AS description,
            l.CATEGORYID AS categoryId
        FROM
            LIKES li
                JOIN LECTURE l ON li.LECTUREID = l.LECTUREID
                JOIN LECTURER le ON l.LECTURERID = le.ID
                JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            li.USERID = #{userid}
    </select>







</mapper>