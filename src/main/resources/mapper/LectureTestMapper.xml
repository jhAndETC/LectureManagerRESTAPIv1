<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hyundai.cc.lecturemanage.lecture.mapper.LectureTestMapper">
    <select id="findLecturerByEmail" parameterType="java.lang.String" resultType="hyundai.cc.lecturemanage.lecturer.dto.LecturerDTO">-->
    SELECT L.ID, U.USERNAME, L.INTRODUCTION
    FROM LECTURER L
             JOIN USER_INFO U ON L.USER_ID = U.ID
    WHERE TRIM(U.EMAIL) = TRIM(#{lecturerEmail, jdbcType=VARCHAR})

    </select>

    <select id="findCategoryIdByName" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT CATEGORYID
        FROM CATEGORY
        WHERE TRIM(CATEGORYNAME) = TRIM(#{categoryName})
    </select>

    <select id="findCenterIdByName" parameterType="java.lang.String" resultType="java.lang.Long">
        SELECT CENTERID
        FROM CENTER_INFO
        WHERE TRIM(NAME) = TRIM(#{centerName})
    </select>


    <insert id="createLecture" parameterType="hyundai.cc.lecturemanage.lecture.dto.LectureCreateDTO">
        <selectKey keyProperty="lectureId" resultType="java.lang.Long" order="BEFORE">
            select LECTUREID_SEQ.nextval from DUAL
        </selectKey>
        <![CDATA[
    INSERT INTO LECTURE (
        LECTUREID, CENTERID, TITLE, LECTURERID, LECTURETIME, LOCATION,
        STARTDATE, ENDDATE, LECTURECOUNT, PRICE, DESCRIPTION, CATEGORYID
    )
    VALUES (
               #{lectureId, jdbcType=NUMERIC},
               #{centerId, jdbcType=NUMERIC},
               #{title, jdbcType=VARCHAR},
               #{lecturerId, jdbcType=VARCHAR},
               #{lectureTime, jdbcType=VARCHAR},
               #{location, jdbcType=VARCHAR},
               #{startDate, jdbcType=DATE},
               #{endDate, jdbcType=DATE},
               #{lectureCount, jdbcType=NUMERIC},
               #{price, jdbcType=NUMERIC},
               #{description, jdbcType=CLOB},
               #{categoryId, jdbcType=NUMERIC}
           )
    ]]>
    </insert>

    <select id="getLecturesByPage" parameterType="hyundai.cc.domain.Criteria"
            resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
            l.LECTUREID    AS lectureId,
            l.TITLE        AS title,
            l.LECTURERID   AS lecturerId,
            U.EMAIL        as lecturerEmail,
            u.USERNAME     AS lecturerName,
            -- le.INTRODUCTION AS lecturerIntroduction,
            c.NAME         AS centerName,
            l.LECTURETIME  AS lectureTime,
            l.LOCATION     AS location,
            l.STARTDATE    AS startDate,
            l.ENDDATE      AS endDate,
            l.LECTURECOUNT AS lectureCount,
            l.PRICE        AS price,
            l.DESCRIPTION  AS description,
            l.CATEGORYID   AS categoryId,
            g.CATEGORYNAME AS categoryName
        FROM
            LECTURE l
                INNER JOIN LECTURER le ON l.LECTURERID = le.ID
                INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                INNER JOIN USER_INFO u ON le.USER_ID = u.ID
                LEFT JOIN CATEGORY g ON l.CATEGORYID = g.CATEGORYID
        ORDER BY
            l.LECTUREID ASC
        offset (#{pageNum} - 1) * #{amount} ROWS FETCH NEXT #{amount} ROWS ONLY
    </select>

    <update id="updateLecture">
        <![CDATA[
        UPDATE LECTURE
        SET CENTERID= #{lecture.centerId, jdbcType=NUMERIC},
            TITLE=#{lecture.title, jdbcType=VARCHAR},
            LECTURERID= #{lecture.lecturerId, jdbcType=VARCHAR},
            LECTURETIME=#{lecture.lectureTime, jdbcType=VARCHAR},
            LOCATION=#{lecture.location, jdbcType=VARCHAR},
            STARTDATE=#{lecture.startDate, jdbcType=DATE},
            ENDDATE=#{lecture.endDate, jdbcType=DATE},
            LECTURECOUNT=#{lecture.lectureCount, jdbcType=NUMERIC},
            PRICE=#{lecture.price, jdbcType=NUMERIC},
            DESCRIPTION=#{lecture.description, jdbcType=CLOB},
            CATEGORYID= #{lecture.categoryId, jdbcType=NUMERIC}
        WHERE LECTUREID = #{id}
        ]]>
    </update>

    <delete id="deleteLecture" parameterType="java.lang.Long">
        DELETE
        FROM LECTURE
        WHERE LECTUREID = #{lectureId}
    </delete>
    <select id="getTotalCount" parameterType="hyundai.cc.domain.Criteria" resultType="java.lang.Integer">
        SELECT COUNT(LECTUREID)
        FROM LECTURE
    </select>

    <select id="getLectureDetail" parameterType="java.lang.Long"
            resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
            l.LECTUREID    AS lectureId,
            l.TITLE        AS title,
            l.LECTURERID   AS lecturerId,
            U.EMAIL        as lecturerEmail,
            u.USERNAME     AS lecturerName,
            -- le.INTRODUCTION AS lecturerIntroduction,
            c.NAME         AS centerName,
            l.LECTURETIME  AS lectureTime,
            l.LOCATION     AS location,
            l.STARTDATE    AS startDate,
            l.ENDDATE      AS endDate,
            l.LECTURECOUNT AS lectureCount,
            l.PRICE        AS price,
            l.DESCRIPTION  AS description,
            l.CATEGORYID   AS categoryId,
            g.CATEGORYNAME AS categoryName
        FROM
            LECTURE l
                INNER JOIN LECTURER le ON l.LECTURERID = le.ID
                INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                INNER JOIN USER_INFO u ON le.USER_ID = u.ID
                LEFT JOIN CATEGORY g ON l.CATEGORYID = g.CATEGORYID
        WHERE
            l.LECTUREID = #{lectureId}
    </select>

    <select id="getLectureList" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">-->
    SELECT
        l.LECTUREID    AS lectureId,
        l.TITLE        AS title,
        l.LECTURERID   AS lecturerId,
        U.EMAIL        as lecturerEmail,
        u.USERNAME     AS lecturerName,
        -- le.INTRODUCTION AS lecturerIntroduction,
        c.NAME         AS centerName,
        l.LECTURETIME  AS lectureTime,
        l.LOCATION     AS location,
        l.STARTDATE    AS startDate,
        l.ENDDATE      AS endDate,
        l.LECTURECOUNT AS lectureCount,
        l.PRICE        AS price,
        l.DESCRIPTION  AS description,
        l.CATEGORYID   AS categoryId,
        g.CATEGORYNAME AS categoryName
    FROM
        LECTURE l
            INNER JOIN LECTURER le ON l.LECTURERID = le.ID
            INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
            INNER JOIN USER_INFO u ON le.USER_ID = u.ID
            LEFT JOIN CATEGORY g ON l.CATEGORYID = g.CATEGORYID
    ORDER BY
        l.LECTUREID ASC

    </select>

    <select id="getLectureLecturer" parameterType="java.lang.Long"
            resultType="hyundai.cc.lecturemanage.lecturer.dto.LecturerDTO">
        <![CDATA[
        SELECT
               LECTURER.ID           AS Id,
               LECTURER.INTRODUCTION AS introduction,
               USER_INFO.USERNAME    AS userName
        FROM LECTURE
                 INNER JOIN LECTURER ON LECTURE.LECTURERID = LECTURER.ID
                 INNER JOIN USER_INFO ON LECTURER.USER_ID = USER_INFO.ID
        WHERE LECTURE.LECTUREID = #{lectureId, jdbcType=NUMERIC}
            ]]>
    </select>


</mapper>