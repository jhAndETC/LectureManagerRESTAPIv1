<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hyundai.cc.usermanage.user.mapper.UserMapper">

    <select id="getUserList" resultType="hyundai.cc.usermanage.user.dto.UserDTO">-->
    select
            id,
           email,
           PASSWORD,
           username,
           nickname,
           createdate,
           content
    from USER_INFO
    order by id desc

    </select>
    <insert id="createUser" parameterType="hyundai.cc.usermanage.user.dto.UserCreateDTO">
        INSERT INTO USER_INFO (
            id,
            email,
            username,
            nickname,
            password,
            content,
            enable
        ) VALUES (
                     #{id},
                     #{email},
                     #{username},
                     #{nickname},
                     #{password},
                     #{content, jdbcType=VARCHAR},
                     #{enable}
                 )
    </insert>




<!--    <select id="getUserDetail" parameterType="java.lang.String" resultType="hyundai.cc.usermanage.user.dto.UserDTO">-->
<!--        SELECT  id,-->
<!--                email,-->
<!--                PASSWORD,-->
<!--                username,-->
<!--                nickname,-->
<!--                content,-->
<!--                createDate-->
<!--        FROM USER_INFO-->
<!--        WHERE ID = #{id}-->
<!--    </select>-->

    <resultMap id="userResultMap" type="hyundai.cc.usermanage.user.dto.UserDTO">
        <id property="id" column="ID"/>
        <result property="email" column="EMAIL"/>
        <result property="password" column="PASSWORD"/>
        <result property="username" column="USERNAME"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="createDate" column="CREATEDATE"/>
        <result property="content" column="CONTENT"/>
        <result property="enable" column="ENABLE"/>
        <collection property="roleList" ofType="java.lang.String" resultMap="roleResultMap"/>
    </resultMap>

    <resultMap id="roleResultMap" type="java.lang.String">
        <result property="roleList" column="authority"/>
    </resultMap>

    <select id="getUserDetail" parameterType="java.lang.String" resultMap="userResultMap">
        SELECT
            U.ID,
            U.EMAIL,
            U.PASSWORD,
            U.USERNAME,
            U.NICKNAME,
            U.CREATEDATE,
            U.CONTENT,
            U.ENABLE,
            R.authority
        FROM
            USER_INFO U
                LEFT JOIN
            USER_ROLE UR ON U.ID = UR.USER_ID
                LEFT JOIN
            ROLE_INFO R ON UR.ROLE_ID = R.ID
        WHERE
            U.ID = #{id}
    </select>


    <update id="updateUser">
        <![CDATA[
        UPDATE USER_INFO
        SET
            USERNAME = #{user.username},
            NICKNAME = #{user.nickname},
            CONTENT=#{user.content, jdbcType=VARCHAR}
        WHERE ID = #{id}
        ]]>
    </update>

    <delete id="deleteUser" parameterType="java.lang.String">
        DELETE FROM USER_INFO WHERE ID = #{userId}
    </delete>



    <select id="getUsersByPage" parameterType="hyundai.cc.domain.Criteria" resultType="hyundai.cc.usermanage.user.dto.UserDTO">
        select id, email, PASSWORD,username, nickname,createdate,content,enable
        from USER_INFO
        order by id desc
        offset (#{pageNum}-1) * #{amount} ROWS FETCH NEXT #{amount} ROWS ONLY
    </select>

    <select id="getTotalCount" parameterType="hyundai.cc.domain.Criteria" resultType="java.lang.Integer">
        SELECT COUNT(id) FROM USER_INFO
    </select>

    <select id="getProgressCount" resultType="java.lang.Integer">
        SELECT COUNT(l.LECTUREID)
        FROM
            ENROLLMENT e
                INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
                INNER JOIN LECTURER le ON l.LECTURERID = le.ID
                INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            e.USER_ID = #{id}
          AND e.IS_FINISHED = 0
    </select>

    <select id="getFinishCount" resultType="java.lang.Integer">
        SELECT COUNT(l.LECTUREID)
        FROM
            ENROLLMENT e
                INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
                INNER JOIN LECTURER le ON l.LECTURERID = le.ID
                INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            e.USER_ID = #{id}
          AND e.IS_FINISHED = 1
    </select>
    <select id="getLikedCount" resultType="java.lang.Integer">
        SELECT COUNT(l.LECTUREID)
        FROM
            LIKES li
                JOIN LECTURE l ON li.LECTUREID = l.LECTUREID
                JOIN LECTURER le ON l.LECTURERID = le.ID
                JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            li.USERID = #{id}
    </select>






    <!-- 수강 중인 과목 조회 -->
    <select id="findProgressCourses" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
        l.LECTUREID AS lectureId,
        l.TITLE AS title,
        l.LECTURERID AS lecturerId,
        u.USERNAME AS lecturerName,
--         le.INTRODUCTION AS lecturerIntroduction,
        c.NAME AS centerName,
        l.LECTURETIME AS lectureTime,
        l.LOCATION AS location,
        l.STARTDATE AS startDate,
        l.ENDDATE AS endDate,
        l.LECTURECOUNT AS lectureCount,
        l.PRICE AS price,
        l.DESCRIPTION AS description,
        l.CATEGORYID AS categoryId
        FROM
        ENROLLMENT e
        INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
        INNER JOIN LECTURER le ON l.LECTURERID = le.ID
        INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
        INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
         e.USER_ID = #{id}
        AND e.IS_FINISHED = 0
        order by l.LECTUREID
        offset (#{cri.pageNum}-1) * #{cri.amount} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>


    <!-- 수강 완료한 과목 조회 -->
    <select id="findFinishCourses" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
        l.LECTUREID AS lectureId,
        l.TITLE AS title,
        l.LECTURERID AS lecturerId,
        u.USERNAME AS lecturerName,
--         le.INTRODUCTION AS lecturerIntroduction,
        c.NAME AS centerName,
        l.LECTURETIME AS lectureTime,
        l.LOCATION AS location,
        l.STARTDATE AS startDate,
        l.ENDDATE AS endDate,
        l.LECTURECOUNT AS lectureCount,
        l.PRICE AS price,
        l.DESCRIPTION AS description,
        l.CATEGORYID AS categoryId
        FROM
        ENROLLMENT e
        INNER JOIN LECTURE l ON e.LECTURE_ID = l.LECTUREID
        INNER JOIN LECTURER le ON l.LECTURERID = le.ID
        INNER JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
        INNER JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            e.USER_ID = #{id}
            AND e.IS_FINISHED = 1
        order by l.LECTUREID
        offset (#{cri.pageNum}-1) * #{cri.amount} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>

    <!-- 좋아요 과목 조회 -->
    <select id="findLikedCourses" resultType="hyundai.cc.lecturemanage.lecture.dto.LectureDTO">
        SELECT
            l.LECTUREID AS lectureId,
            l.TITLE AS title,
            l.LECTURERID AS lecturerId,
            u.USERNAME AS lecturerName,
--             le.INTRODUCTION AS lecturerIntroduction,
            c.NAME AS centerName,
            l.LECTURETIME AS lectureTime,
            l.LOCATION AS location,
            l.STARTDATE AS startDate,
            l.ENDDATE AS endDate,
            l.LECTURECOUNT AS lectureCount,
            l.PRICE AS price,
            l.DESCRIPTION AS description,
            l.CATEGORYID AS categoryId
        FROM
            LIKES li
                JOIN LECTURE l ON li.LECTUREID = l.LECTUREID
                JOIN LECTURER le ON l.LECTURERID = le.ID
                JOIN CENTER_INFO c ON l.CENTERID = c.CENTERID
                JOIN USER_INFO u ON le.USER_ID = u.ID
        WHERE
            li.USERID = #{id}
        order by l.LECTUREID
        offset (#{cri.pageNum}-1) * #{cri.amount} ROWS FETCH NEXT #{cri.amount} ROWS ONLY
    </select>







</mapper>